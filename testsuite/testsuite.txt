This file is intended to be processed by python doctest
cf http://en.wikipedia.org/wiki/Doctest

!!!!!!!!!!!!! WARNING !!!!!!!!!!!!!!
You've maybe to configure this line according to your setup.
You've to use a special todo.cfg as it will *DELETE* the files before running the tests!
    >>> TODO="todo.sh -d $(pwd)/testsuite.cfg"

Don't modify those lines:
    >>> import os
    >>> def bash(commandstring):
    ...     print os.popen(commandstring).read()
    >>> def todo(args=''):
    ...     bash(TODO + ' ' + args)

Let's clean a bit as it was told to you a second ago.
    >>> bash('rm -f deleteme_*')

The syntax to create a test is the following.
It's very important to let one empty line after the intended output!
Note that "..." in the output is a catchall (think regexp ".*")
    >>> bash('echo -e "test bla bla bla end\nwhy not a second line"')
    test...end
    why not a second line

Here are the regression tests for todo.sh

Default:
    >>> todo()
    Usage: todo.sh  [-fhpantvV] [-d todo_config] action [task_number] [task_description]
    Try 'todo.sh -h' for more information.

Add:
    >>> todo('add "notice the daisies"')
    TODO: 'notice the daisies' added on line 1.
    >>> todo('list')
    01 notice the daisies
    --
    TODO: 1 tasks in ...todo.txt.

Replace:
    >>> todo('replace adf asdfa')
    usage: ...todo.sh replace ITEM# "UPDATED ITEM"

    >>> todo('replace 1 "smell the cows"')
    replaced with
    1: smell the cows
    >>> todo('list')
    01 smell the cows
    --
    TODO: 1 tasks in ...todo.txt.

    >>> todo('replace 1 smell the roses')
    replaced with
    1: smell the roses
    >>> todo('list')
    01 smell the roses
    --
    TODO: 1 tasks in ...todo.txt.

    >>> todo('replace 1 smell the uppercase Roses')
    replaced with
    1: smell the uppercase Roses
    >>> todo('list')
    01 smell the uppercase Roses
    --
    TODO: 1 tasks in ...todo.txt.

    >>> todo('list roses')
    01 smell the uppercase Roses

    >>> todo('add notice the sunflowers')
    TODO: 'notice the sunflowers' added on line 2.
    >>> todo('list')
    02 notice the sunflowers
    01 smell the uppercase Roses
    --
    TODO: 2 tasks in ...todo.txt.

Append:
    >>> todo('append 1 p:flowers @outside')
    1: smell the uppercase Roses p:flowers @outside
    >>> todo('list')
    02 notice the sunflowers
    01 smell the uppercase Roses p:flowers @outside
    --
    TODO: 2 tasks in ...todo.txt.

    >>> todo('add "stop"')
    TODO: 'stop' added on line 3.
    >>> todo('list')
    02 notice the sunflowers
    01 smell the uppercase Roses p:flowers @outside
    03 stop
    --
    TODO: 3 tasks in ...todo.txt.

Pri:
    >>> todo('pri B B')
    usage: ...todo.sh pri ITEM# PRIORITY
    note:  PRIORITY must be anywhere from A to Z.

    >>> todo('pri 1 B')
    1: (B) smell the uppercase Roses p:flowers @outside
    TODO: 1 prioritized (B).
    >>> todo('list')
    [0;32m01 (B) smell the uppercase Roses p:flowers @outside [0m
    02 notice the sunflowers
    03 stop
    --
    TODO: 3 tasks in ...todo.txt.

    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 notice the sunflowers
    03 stop
    --
    TODO: 3 tasks in ...todo.txt.

    >>> todo('pri 2 C')
    2: (C) notice the sunflowers
    TODO: 2 prioritized (C).
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) notice the sunflowers 
    03 stop
    --
    TODO: 3 tasks in ...todo.txt.

    >>> todo('pri 2 A')
    2: (A) notice the sunflowers
    TODO: 2 prioritized (A).
    >>> todo('-p list')
    02 (A) notice the sunflowers 
    01 (B) smell the uppercase Roses p:flowers @outside 
    03 stop
    --
    TODO: 3 tasks in ...todo.txt.

    >>> todo('pri 2 a')
    2: (A) notice the sunflowers
    TODO: 2 prioritized (A).
    >>> todo('-p listpri')
    02 (A) notice the sunflowers
    01 (B) smell the uppercase Roses p:flowers @outside
    --
    TODO: 2 prioritized tasks in ...todo.txt.

    >>> todo('add "smell the coffee p:wakeup"')
    TODO: 'smell the coffee p:wakeup' added on line 4.
    >>> todo('-p list')
    02 (A) notice the sunflowers 
    01 (B) smell the uppercase Roses p:flowers @outside 
    04 smell the coffee p:wakeup
    03 stop
    --
    TODO: 4 tasks in ...todo.txt.

    >>> todo('-p list p:flowers')
    01 (B) smell the uppercase Roses p:flowers @outside 

    >>> todo('-p list flowers')
    02 (A) notice the sunflowers 
    01 (B) smell the uppercase Roses p:flowers @outside 

    >>> todo('-p list flowers out')
    01 (B) smell the uppercase Roses p:flowers @outside 

Do:
    >>> todo('do 2')
    2: x ... notice the sunflowers
    TODO: 2 marked as done.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    04 smell the coffee p:wakeup
    03 stop
    02 x ... notice the sunflowers
    --
    TODO: 4 tasks in ...todo.txt.

    >>> todo('add "make the coffee p:wakeup"')
    TODO: 'make the coffee p:wakeup' added on line 5.
    >>> todo('-p list coffee')
    05 make the coffee p:wakeup
    04 smell the coffee p:wakeup

    >>> todo('add "visit http://example.com"')
    TODO: 'visit http://example.com' added on line 6.

    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    05 make the coffee p:wakeup
    04 smell the coffee p:wakeup
    03 stop
    06 visit http://example.com
    02 x ... notice the sunflowers
    --
    TODO: 6 tasks in ...todo.txt.

Archive:
    >>> todo('archive')
    x ... notice the sunflowers
    TODO:  ...todo.txt archived.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    02 stop
    05 visit http://example.com
    --
    TODO: 5 tasks in ...todo.txt.

Report:
    >>> todo('report')
    TODO:  Report file updated.
    20...-...-...-...:...:... 5 1

    >>> todo('report')
    TODO:  Report file updated.
    20...-...-...-...:...:... 5 1
    20...-...-...-...:...:... 5 1

Misc:
    >>> todo('append g a')
    usage: ...todo.sh append ITEM# "TEXT TO APPEND"
    >>> todo('append 2 and think')
    2: stop and think

    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    02 stop and think
    05 visit http://example.com
    --
    TODO: 5 tasks in ...todo.txt.

    >>> todo('pri 2 C')
    2: (C) stop and think
    TODO: 2 prioritized (C).
    >>> todo('replace 10 "hej!"')
    10:  No such todo.

    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 5 tasks in ...todo.txt.

    >>> todo('append 10 "hej!"')
    10:  No such todo.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 5 tasks in ...todo.txt.

    >>> todo('do 10')
    10:  No such todo.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 5 tasks in ...todo.txt.

    >>> todo('add "the coffee p:wakeup"')
    TODO: 'the coffee p:wakeup' added on line 6.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    06 the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 6 tasks in ...todo.txt.

    >>> todo('prepend 6 "make"')
    6: make the coffee p:wakeup
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    06 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 6 tasks in ...todo.txt.

    >>> todo('remdup')
    Usage: todo.sh  [-fhpantvV] [-d todo_config] action [task_number] [task_description]
    Try 'todo.sh -h' for more information.
    >>> todo('-p list')
    01 (B) smell the uppercase Roses p:flowers @outside 
    02 (C) stop and think 
    04 make the coffee p:wakeup
    06 make the coffee p:wakeup
    03 smell the coffee p:wakeup
    05 visit http://example.com
    --
    TODO: 6 tasks in ...todo.txt.

Cleaning again
    >>> bash('rm -f deleteme_*')

